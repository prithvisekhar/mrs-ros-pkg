<?xml version="1.0"?>
<robot name="power" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <!-- The following included files set up definitions of parts of the robot body -->

  <!-- power base -->
  <xacro:include filename="$(find mrs_description)/urdf/power_base/base.urdf.xacro" /> 
<xacro:include filename="$(find mrs_description)/urdf/power_base/ball_bearing.urdf.xacro" />
    <!-- constants for robot -->
<xacro:include filename="$(find mrs_description)/urdf/common_mrs.xacro" />
  <!-- simplified box collision geometry for base -->
<xacro:include filename="$(find 
mrs_description)/urdf/power_base/sm_other.urdf.xacro" />
    <!-- Constants for robot -->
    <xacro:include filename="$(find mrs_description)/urdf/JM/jm.xacro" />
    <xacro:include filename="$(find mrs_description)/urdf/PCM/pcm.xacro" />
  <!-- Now we can start using the macros included above to define the actual power -->

  <!-- The first use of a macro.  This one was defined in base.urdf.xacro above.
       A macro like this will expand to a set of link and joint definitions, and to additional
       Gazebo-related extensions (sensor plugins, etc).  The macro takes an argument, name, 
       that equals "base", and uses it to generate names for its component links and joints 
       (e.g., base_link).  The included origin block is also an argument to the macro.  By convention, 
       the origin block defines where the component is w.r.t its parent (in this case the parent 
       is the world frame). For more, see http://www.ros.org/wiki/xacro -->
<!--
THe Hotcell import
-->
  <link name="world" >
    <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.001 0.001 0.001"/>
        </geometry>
        <material name="Red"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.001 0.001 0.001"/>
        </geometry>
      </collision>
    </link>
  <link name="link_hotcell">
        <!--> Not necessary to declare inertia as the body is static<-->
      <collision name="collision_hotcell">
<!--
        <pose>0 0 0.05 0 0 0</pose>
-->
        <geometry>
            <mesh filename="package://mrs_gazebo/models/Hotcell/meshes/Hotcell.dae" scale="2.5 2.5 2.5"/>
        </geometry>
      </collision>
      <visual name="visual_hotcell">
<!--
        <pose>0 0 0.05 0 0 0</pose>
-->
        <geometry>
           <mesh filename="package://mrs_gazebo/models/Hotcell/meshes/Hotcell.dae" scale="2.5 2.5 2.5"/>
        </geometry>
      </visual>
    </link>
    <link name="link_manipulator_1">
        <!--> Not necessary to declare inertia as the body is static<-->

      <collision name="collision_man1">

        <geometry>
           <mesh filename="package://mrs_gazebo/models/MT200_nuc_manipulator/meshes/Manipulator.dae" scale="0.25 0.25 0.25"/>
        </geometry>
      </collision>
      <visual name="visual_man1">
        <geometry>
           <mesh filename="package://mrs_gazebo/models/MT200_nuc_manipulator/meshes/Manipulator.dae" scale="0.250 0.25 0.25"/>
        </geometry>
      </visual>
    </link>
     <link name="link_manipulator_2">
        <!--> Not necessary to declare inertia as the body is static<-->

      <collision name="collision_man2">
        <geometry>
           <mesh filename="package://mrs_gazebo/models/MT200_nuc_manipulator/meshes/Manipulator.dae" scale="0.25 0.25 0.25"/>
        </geometry>
      </collision>
      <visual name="visual_man2">
        <geometry>
           <mesh filename="package://mrs_gazebo/models/MT200_nuc_manipulator/meshes/Manipulator.dae" scale="0.25 0.25 0.25"/>
        </geometry>
      </visual>
    </link>   
        
    <link name="manipable_box">

<!--
      <collision name="box_coll">
        <geometry>
          <box size="0.9 0.60 0.3"/>
        </geometry>
      </collision>
-->
      <visual name="box_visual">
        <geometry>
            <box size="0.45 0.30 0.15"/>
        </geometry>
              <material name="red"/>
      </visual>
    </link>
<joint name="fixed_hotcell_joint" type="fixed">
    <origin xyz="0 0.05 0" rpy="0 0 0"/>
    <child link="link_hotcell"/>
    <parent link="world"/>
  </joint>
    <joint name="fixed_manipulator_joint1" type="fixed">
    <origin xyz="-1.13 -0.075 0.345" rpy="0 0 0"/>
    <child link="link_manipulator_1"/>
    <parent link="link_hotcell"/>
  </joint>
<joint name="fixed_manipulator_joint2" type="fixed">
    <origin xyz="-1.325 -0.075 0.345" rpy="0 0 0"/>
    <child link="link_manipulator_2"/>
    <parent link="link_hotcell"/>
  </joint>
   <joint name="fixed_maniBox_joint1" type="fixed">
    <origin xyz="-1.1 -0.525 0.6" rpy="0 0 0"/>
    <child link="manipable_box"/>
    <parent link="link_hotcell"/>
  </joint>
  <!-- inspection robot-->
<!--
    <link name="robot2" />
    
<joint name="fixed_robot2_joint" type="fixed">
    <origin xyz="-1.75 -0.525 0.35" rpy="0 0 ${-pi/2}"/>
    <child link="robot2"/>
    <parent link="world"/>
  </joint> 

    <joint name="fixed_robot2_world_joint" type="fixed">
        <axis xyz="1 0 0 " />
        <origin xyz="0 0 0.05" rpy="0 ${-pi/2} 0" />
        <parent link="robot2" />
        <child link="robot2_world_footprint" />
    </joint>
    <link name="robot2_world_footprint">
            <visual>
                <geometry>
                    <box size="0.07 0.07 0.14" />
                </geometry>
                <material name="Blue">
                </material>
            </visual>
    </link>
  <xacro:PcModule_Prismatic parent="robot2" prefix="W3" reflect="3" />
  <xacro:JM3_solid name="JM" prefix="W1" instance="1"  parent="W1_PCmodule" reflect="1" shift="0.035"/>
  <xacro:PcModule_solid parent="robot2_world_footprint" prefix="W1" reflect="-1" />
  <xacro:PcModule_solid parent="robot2_world_footprint" prefix="W2" reflect="1" />
  <xacro:JM3 name="JM1" prefix="W1" instance="2"  parent="W2_PCmodule" reflect="-1" shift="0.035"/>
  <xacro:SMRadprobe parent="W3_PCmodule" prefix="W4" reflect="0" instance="1" />
  
-->
  <!-- foot for arm-->
  
    <link name="robot1" >
    </link>
<joint name="fixed_robot1" type="fixed">
    <origin xyz="-0.6 -0.525 0.5" rpy="0 0 0"/>
    <child link="robot1"/>
    <parent link="world"/>
  </joint> 
  <xacro:power_base name="base1" parent="robot1"/>
<!--
  <xacro:Ball_bearing mass="0.1" instance="1" dia="0.05" x="0.05" y="0.05" z="-0.05" parent="base_link"/>
  <xacro:Ball_bearing mass="0.1" instance="2" dia="0.05" x="-0.05" y="0.05" z="-0.05" parent="base_link"/>
  <xacro:Ball_bearing mass="0.1" instance="3" dia="0.05" x="0.05" y="-0.05" z="-0.05" parent="base_link"/>
  <xacro:Ball_bearing mass="0.1" instance="4" dia="0.05" x="-0.05" y="-0.05" z="-0.05" parent="base_link"/>
  
  <xacro:Camera parent="${name}_link_support" prefix="base" x="0.15" y="0" z="0.27" instance="1" />
<xacro:Camera parent="${name}_link_support" prefix="base" x="0" y="0.15" z="0.27" instance="2" />
<xacro:Camera parent="${name}_link_support" prefix="base" x="-0.15" y="0" z="0.27" instance="3" />
<xacro:Camera parent="${name}_link_support" prefix="base" x="0" y="-0.15" z="0.27" instance="4" />
-->

<!--
          Create the orientation joint
          
-->
<!--
ARM 1
-->
        <link name="arm1" />
    
<joint name="arm1_joint" type="revolute">
    <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
    <child link="arm1"/>
    <parent link="2_base_camera_link"/>
     <limit lower="0" upper="3" effort="${max_effort}"
      velocity="${max_velocity}" />
  </joint> 
  <link name="arm1_1" />
  <joint name="arm12_joint" type="revolute">
    <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
    <child link="arm1_1"/>
    <parent link="arm1"/>
     <limit lower="${-pi}" upper="${pi}" effort="${max_effort}"
      velocity="${max_velocity}" />
  </joint>           
    <xacro:JM1_armconnect name="JM" prefix="L2" instance="1"  parent="arm1_1" />
    <xacro:PcModule parent="L21_PCmodule" prefix="L22" instance="2" />
    <xacro:PcModule parent="1_L2_j2_link" prefix="L21" instance="1" />
    <xacro:PcModule_Prismatic_arm parent="L22_PCmodule" prefix="L2_prismatic" reflect="1" shift="0.07"/>
    <xacro:JM2 name="JM1" prefix="L2" instance="2"  parent="L2_prismatic_PCmodule" reflect="1" shift="0.035" shift2="0"/>

    <xacro:SMHand parent="2_L2_w1_link" prefix="L2" reflect="1" instance="1"/>

<!--
ARM 2
-->
        <link name="arm2" />
    
<joint name="arm2_joint" type="revolute">
    <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
    <child link="arm2"/>
    <parent link="4_base_camera_link"/>
     <limit lower="${-pi}" upper="${pi}" effort="${max_effort}"
      velocity="${max_velocity}" />
  </joint> 
  <link name="arm2_1" />
  <joint name="arm22_joint" type="revolute">
    <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
    <child link="arm2_1"/>
    <parent link="arm2"/>
     <limit lower="${-pi}" upper="${pi}" effort="${max_effort}"
      velocity="${max_velocity}" />
  </joint> 
    <link name="arm2_2" />
  <joint name="arm23_joint" type="revolute">
    <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
    <child link="arm2_2"/>
    <parent link="arm2_1"/>
     <limit lower="${-pi}" upper="${pi}" effort="${max_effort}"
      velocity="${max_velocity}" />
  </joint> 
  
    <xacro:JM1 name="JM" prefix="L1" instance="1"  parent="arm2_2" />
    <xacro:PcModule parent="L11_PCmodule" prefix="L12" instance="2" />
    <xacro:PcModule parent="1_L1_j2_link" prefix="L11" instance="1" />
    <xacro:JM2 name="JM1" prefix="L1" instance="2"  parent="L12_PCmodule" reflect="0" shift="0.035" shift2="1"/>
    <xacro:SMHand parent="2_L1_w1_link" prefix="L1" reflect="1" instance="2"/>
<!--
 <xacro:SMRadprobe parent="2_L1_w1_link" prefix="L1" reflect="0" instance="1" /> 
-->

        
<!--
    ARM3 - parent {instance}_${prefix}_camera_link
-->
        <link name="arm3" />
    
<joint name="arm3_joint" type="revolute">
    <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
    <child link="arm3"/>
    <parent link="1_base_camera_link"/>
     <limit lower="${-pi}" upper="${pi}" effort="${max_effort}"
      velocity="${max_velocity}" />
  </joint> 
  <link name="arm3_1" />
  <joint name="arm32_joint" type="revolute">
    <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
    <child link="arm3_1"/>
    <parent link="arm3"/>
     <limit lower="${-pi}" upper="${pi}" effort="${max_effort}"
      velocity="${max_velocity}" />
  </joint> 
    <link name="arm3_2" />
  <joint name="arm33_joint" type="revolute">
    <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
    <child link="arm3_2"/>
    <parent link="arm3_1"/>
     <limit lower="${-pi}" upper="${pi}" effort="${max_effort}"
      velocity="${max_velocity}" />
  </joint> 
  
    <xacro:JM1 name="JM" prefix="L3" instance="1"  parent="arm3_2" />
    <xacro:PcModule parent="L31_PCmodule" prefix="L32" instance="2" />
    <xacro:PcModule parent="1_L3_j2_link" prefix="L31" instance="1" />
    <xacro:JM2 name="JM1" prefix="L3" instance="2"  parent="L32_PCmodule" reflect="0" shift="0.035" shift2="1"/>
     <xacro:SMRadprobe parent="2_L3_w1_link" prefix="L3" reflect="0" instance="1" /> 
<!--
    <xacro:SMHand parent="2_L3_w1_link" prefix="L3" reflect="1" instance="3"/>
-->

  <gazebo>
    <plugin name="gazebo_ros_controller_manager" filename="libgazebo_ros_control.so">
      <robotNamespace>/mrs</robotNamespace>
    </plugin>

    <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>/mrs/cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
    
  </gazebo>

  
</robot>

